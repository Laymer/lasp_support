dvvset.erl:156: Type specification dvvset:update(clock(),id()) -> clock() is a supertype of the success typing: dvvset:update({[{_,non_neg_integer(),[any()]}],[any(),...]},_) -> {[{_,non_neg_integer(),[any()]},...],[]}
dvvset.erl:168: Type specification dvvset:update(clock(),clock(),id()) -> clock() is a supertype of the success typing: dvvset:update({[{_,non_neg_integer(),[any()]}],[any(),...]},{[{_,non_neg_integer(),[any()]}],[any()]},_) -> {[{_,non_neg_integer(),[any()]},...],[any()]}
hashtree.erl:219: Type specification hashtree:new({index(),tree_id_bin() | non_neg_integer()}) -> hashtree() is a supertype of the success typing: hashtree:new({0,0}) -> hashtree:hashtree()
hashtree.erl:491: Type specification hashtree:set_bucket(integer(),integer(),any(),hashtree()) -> hashtree() is a supertype of the success typing: hashtree:set_bucket(pos_integer(),integer(),[{_,_}],hashtree:hashtree()) -> hashtree:hashtree()
hashtree.erl:625: Type specification hashtree:set_memory_bucket(integer(),integer(),any(),hashtree()) -> hashtree() is a supertype of the success typing: hashtree:set_memory_bucket(pos_integer(),integer(),[{_,_}],hashtree:hashtree()) -> hashtree:hashtree()
hashtree.erl:640: Type specification hashtree:set_disk_bucket(integer(),integer(),any(),hashtree()) -> hashtree() is a supertype of the success typing: hashtree:set_disk_bucket(pos_integer(),integer(),[{_,_}],hashtree:hashtree()) -> hashtree:hashtree()
hashtree_tree.erl:208: Type specification hashtree_tree:insert(prefixes(),binary(),binary(),tree()) -> tree() | {'error',term()} is a supertype of the success typing: hashtree_tree:insert([atom() | binary()],binary(),binary(),hashtree_tree:tree()) -> {'error','bad_prefixes'} | hashtree_tree:tree()
